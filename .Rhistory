Media <- rowMeans(datos)
datos <- cbind(datos,Media)
hist(Media, breaks = 30)
hist(Media, breaks = 30, prob = TRUE)
lines(density(Media), col = 4, lwd = 2)
x2 <- seq(min(Media), max(Media), length = 40)
fun <- dnorm(x2, mean = mean(Media), sd = sd(Media))
lines(x2, fun, col = 2, lwd = 2)
## Cálculo de estadísticos para una de las variables de la población
mean(datos$X5)
var(datos$X5)
sd(datos$X5)
## Cálculo de estadísticos para la variable aleatoria Media Muestral
mean(Media)
var(Media)
sd(Media)
## Distribución de la Varianza Muestral
Varianza <- rowVars(as.matrix(datos[,1:n]))
datos <- cbind(datos,Varianza)
hist(Varianza, breaks = 30)
hist(Varianza, breaks = 30, prob = TRUE)
lines(density(Varianza), col = 4, lwd = 2)
Chi <- (n-1)*Varianza/100
hist(Chi, breaks = 30)
hist(Chi, breaks = 30, prob = TRUE)
x2 <- seq(min(Chi), max(Chi), length = 100)
lines(x2, fun, col = 2, lwd = 2)
install.packages("matrixStats")
# Generación de datos siguiendo una distribución normal
x <- rnorm(n = 10, mean = 70, sd = 10)
hist(x, breaks = 30)
mean(x)
var(x)
sd(x)
# Simulación de la edad de vida de colonos en diferentes planetas
# Tomamos una muestra de tamaño n de una población cuya edad de vida promedio
# es 70 años y cuya desviación estándar es 10 años. Replicamos este experimento
# m veces.
n <-10  # Tamaño de muestra
m <-10000  # Número de réplicas
datos <- matrix(nrow = m, ncol = n)
for (i in 1:m) {
datos[i,] <- rnorm(n, mean = 70, sd = 10)
}
datos <- data.frame(datos)
hist(datos$X5, breaks = 30)
hist(datos$X10, breaks = 30)
## Distribución de la Media Muestral
Media <- rowMeans(datos)
datos <- cbind(datos,Media)
hist(Media, breaks = 30)
hist(Media, breaks = 30, prob = TRUE)
lines(density(Media), col = 4, lwd = 2)
x2 <- seq(min(Media), max(Media), length = 40)
fun <- dnorm(x2, mean = mean(Media), sd = sd(Media))
lines(x2, fun, col = 2, lwd = 2)
## Cálculo de estadísticos para una de las variables de la población
mean(datos$X5)
var(datos$X5)
sd(datos$X5)
## Cálculo de estadísticos para la variable aleatoria Media Muestral
mean(Media)
var(Media)
sd(Media)
## Distribución de la Varianza Muestral
Varianza <- rowVars(as.matrix(datos[,1:n]))
datos <- cbind(datos,Varianza)
hist(Varianza, breaks = 30)
hist(Varianza, breaks = 30, prob = TRUE)
lines(density(Varianza), col = 4, lwd = 2)
Chi <- (n-1)*Varianza/100
hist(Chi, breaks = 30)
hist(Chi, breaks = 30, prob = TRUE)
x2 <- seq(min(Chi), max(Chi), length = 100)
lines(x2, fun, col = 2, lwd = 2)
# Generación de datos siguiendo una distribución normal
x <- rnorm(n = 10, mean = 70, sd = 10)
hist(x, breaks = 30)
mean(x)
var(x)
sd(x)
# Simulación de la edad de vida de colonos en diferentes planetas
# Tomamos una muestra de tamaño n de una población cuya edad de vida promedio
# es 70 años y cuya desviación estándar es 10 años. Replicamos este experimento
# m veces.
n <-10  # Tamaño de muestra
m <-10000  # Número de réplicas
datos <- matrix(nrow = m, ncol = n)
for (i in 1:m) {
datos[i,] <- rnorm(n, mean = 70, sd = 10)
}
datos <- data.frame(datos)
hist(datos$X5, breaks = 30)
hist(datos$X10, breaks = 30)
## Distribución de la Media Muestral
Media <- rowMeans(datos)
datos <- cbind(datos,Media)
hist(Media, breaks = 30)
hist(Media, breaks = 30, prob = TRUE)
lines(density(Media), col = 4, lwd = 2)
x2 <- seq(min(Media), max(Media), length = 40)
fun <- dnorm(x2, mean = mean(Media), sd = sd(Media))
lines(x2, fun, col = 2, lwd = 2)
## Cálculo de estadísticos para una de las variables de la población
mean(datos$X5)
var(datos$X5)
sd(datos$X5)
## Cálculo de estadísticos para la variable aleatoria Media Muestral
mean(Media)
var(Media)
sd(Media)
## Distribución de la Varianza Muestral
Varianza <- rowVars(as.matrix(datos[,1:n]))
datos <- cbind(datos,Varianza)
hist(Varianza, breaks = 30)
hist(Varianza, breaks = 30, prob = TRUE)
lines(density(Varianza), col = 4, lwd = 2)
Chi <- (n-1)*Varianza/100
hist(Chi, breaks = 30)
hist(Chi, breaks = 30, prob = TRUE)
x2 <- seq(min(Chi), max(Chi), length = 100)
fun <- dnorm(x2, mean = mean(Media), sd = sd(Media))
lines(x2, fun, col = 2, lwd = 2)
## Cálculo de estadísticos para la variable aleatoria Varianza Muestral
mean(Chi)
var(Chi)
# Generación de datos siguiendo una distribución normal
x <- rnorm(n = 10, mean = 70, sd = 10)
hist(x, breaks = 30)
mean(x)
var(x)
sd(x)
# Simulación de la edad de vida de colonos en diferentes planetas
# Tomamos una muestra de tamaño n de una población cuya edad de vida promedio
# es 70 años y cuya desviación estándar es 10 años. Replicamos este experimento
# m veces.
n <-10  # Tamaño de muestra
m <-10000  # Número de réplicas
datos <- matrix(nrow = m, ncol = n)
for (i in 1:m) {
datos[i,] <- rnorm(n, mean = 70, sd = 10)
}
datos <- data.frame(datos)
hist(datos$X5, breaks = 30)
hist(datos$X10, breaks = 30)
## Distribución de la Media Muestral
Media <- rowMeans(datos)
datos <- cbind(datos,Media)
hist(Media, breaks = 30)
hist(Media, breaks = 30, prob = TRUE)
lines(density(Media), col = 4, lwd = 2)
x2 <- seq(min(Media), max(Media), length = 40)
fun <- dnorm(x2, mean = mean(Media), sd = sd(Media))
lines(x2, fun, col = 2, lwd = 2)
## Cálculo de estadísticos para una de las variables de la población
mean(datos$X5)
var(datos$X5)
sd(datos$X5)
## Cálculo de estadísticos para la variable aleatoria Media Muestral
mean(Media)
var(Media)
sd(Media)
## Distribución de la Varianza Muestral
Varianza <- rowVars(as.matrix(datos[,1:n]))
datos <- cbind(datos,Varianza)
hist(Varianza, breaks = 30)
hist(Varianza, breaks = 30, prob = TRUE)
lines(density(Varianza), col = 4, lwd = 2)
Chi <- (n-1)*Varianza/100
hist(Chi, breaks = 30)
hist(Chi, breaks = 30, prob = TRUE)
x2 <- seq(min(Chi), max(Chi), length = 100)
fun <- dchisq(x2, df = 9)
lines(x2, fun, col = 2, lwd = 2)
## Cálculo de estadísticos para la variable aleatoria Varianza Muestral
mean(Chi)
var(Chi)
# Cargar datos y verlos
datosHist <- read.csv('datosHist.csv')
library(dplyr)
datosHist <- read.csv('datosHist.csv')
library(ggplot2)
datosHist <- read.csv('datosHist.csv')
library(readxl)
datosHist <- read.csv('datosHist.csv')
setwd("~/Documentos/cafe")
View(DestinoDeEsportación)
datosHist <- read.csv('datosHist.csv')
View(datosHist)
View(datosHist)
DestinoDeEsportación <- read.csv('DestinoDeEsportación.csv')
View(DestinoDeEsportación)
# Filtrar los datos para incluir solo los registros del año 2023 y 2024
DestinoDeEsportación23_24 <- subset(DestinoDeEsportación, Año >= 2023 & Año <= 2024)
View(DestinoDeEsportación23_24)
# Calcular el promedio de la columna Valor_factura_USD para los años 2023 y 2024 (hipótesis nula)
promedio_valor <- mean(DestinoDeEsportación23_24$Valor_factura_USD)
print(promedio_valor)  # Imprimir el resultado
# Filtrar y seleccionar aleatoriamente el 10% de los datos del año 2024 (hipótesis alternativa)
DestinoDeEsportación24 <- subset(DestinoDeEsportación, Año == 2024)
tamano_muestra <- round(0.1 * nrow(DestinoDeEsportación24))
set.seed(42)
DesExRandom24 <- DestinoDeEsportación24[sample(nrow(DestinoDeEsportación24), size = tamano_muestra, replace = FALSE), ]
View(DesExRandom24)
# Calcular el promedio de la columna Valor_factura_USD para los datos aleatorios del año 2024 (hipótesis alternativa)
promedioExrandom24 <- mean(DesExRandom24$Valor_factura_USD)
print(promedioExrandom24)  # Imprimir el resultado
print(promedio_valor)  # Imprimir el resultado
desviacion_estandar <- sd(DestinoDeEsportación23_24$Valor_factura_USD)
print(desviacion_estandar)
# Filtrar y seleccionar aleatoriamente el 10% de los datos del año 2024 (hipótesis alternativa)
DestinoDeEsportación24 <- subset(DestinoDeEsportación, Año == 2024)
tamano_muestra <- round(0.1 * nrow(DestinoDeEsportación24))
x <- seq(mean(DestinoDeEsportación23_24$Valor_factura_USD) - 3 * desviacion_estandar, mean(DestinoDeEsportación23_24$Valor_factura_USD) + 3 * desviacion_estandar, length.out = 100)
y <- dnorm(x, mean(DestinoDeEsportación23_24$Valor_factura_USD), desviacion_estandar)
plot(x, y, type = "l", xlab = "Valor de la factura (USD)", ylab = "Densidad", main = "Distribución Normal del Valor de la Factura")
DestinoDeEsportación224$Valor_factura_USD
DesviaciónExRandom24 <- sd(DesExRandom24$Valor_factura_USD)
print(DesviaciónExRandom24)
print(DesviaciónExRandom24)
print(promedioExrandom24)  # Imprimir el resultado
print(promedio_valor)  # Imprimir el resultado
print(desviacion_estandar)
# Graficar la curva normal de color rojo
curve(dnorm(x, mean = promedio_valor, sd = desviacion_estandar),
from = promedio_valor - 3 * desviacion_estandar,
to = promedio_valor + 3 * desviacion_estandar,
xlab = "Valor de la factura (USD)",
ylab = "Densidad",
main = "Distribución Normal del Valor de la Factura",
col = "red")
curve(dnorm(x, mean = promedio_valor, sd = desviacion_estandar),
xlab = "Valor de la factura (USD)",
ylab = "Densidad",
main = "Distribución Normal del Valor de la Factura",
col = "red")
curve(dnorm(x, mean = promedio_valor, sd = desviacion_estandar),
from = promedio_valor - 3 * desviacion_estandar,
to = promedio_valor + 3 * desviacion_estandar,
xlab = "Valor de la factura (USD)",
ylab = "Densidad",
main = "Distribución Normal del Valor de la Factura",
col = "red")
print(promedio_valor)  # Imprimir el resultado
abline(v = promedio_valor, col = "blue", lty = 2)
# Graficar la curva normal de color rojo
curve(dnorm(x, mean = promedio_valor, sd = desviacion_estandar),
from = promedio_valor * desviacion_estandar,
to = promedio_valor * desviacion_estandar,
xlab = "Valor de la factura (USD)",
ylab = "Densidad",
main = "Distribución Normal del Valor de la Factura",
col = "red")
# Graficar la curva normal de color rojo
curve(dnorm(x, mean = promedio_valor, sd = desviacion_estandar),
from = promedio_valor +3 * desviacion_estandar,
to = promedio_valor -3 * desviacion_estandar,
xlab = "Valor de la factura (USD)",
ylab = "Densidad",
main = "Distribución Normal del Valor de la Factura",
col = "red")
abline(v = promedio_valor, col = "blue", lty = 2)
# Superponer la segunda curva normal (DesExRandom24) en azul
curve(dnorm(x, mean = promedioExrandom24, sd = desviacionExRandom24),
add = TRUE,
col = "blue")
# Superponer la segunda curva normal (DesExRandom24) en azul
curve(dnorm(x, mean = promedioExrandom24, sd = DesviacionExRandom24),
add = TRUE,
col = "blue")
curve(dnorm(x, mean = promedioExrandom24, sd = DesviaciónExRandom24),
add = TRUE,
col = "blue")
# Agregar línea punteada en el promedio de DesExRandom24
abline(v = promedioExrandom24, col = "red", lty = 2)
# Graficar la estimación de la densidad kernel
plot(density(DestinoDeEsportación23_24$Valor_factura_USD),
main = "Estimación de la Densidad Kernel",
xlab = "Valor de la factura (USD)",
ylab = "Densidad",
col = "blue")
# Agregar línea punteada en el promedio
abline(v = promedio_valor, col = "red", lty = 2)
# Calcular los límites para la curva normal
lim_inf <- max(0, promedio_valor - 3 * desviacion_estandar)
lim_sup <- promedio_valor + 3 * desviacion_estandar
# Graficar la curva normal (DestinoDeEsportación23_24) en rojo
curve(dnorm(x, mean = promedio_valor, sd = desviacion_estandar),
from = lim_inf,
to = lim_sup,
xlab = "Valor de la factura (USD)",
ylab = "Densidad",
main = "Distribución Normal del Valor de la Factura",
col = "red")
# Agregar línea punteada en el promedio
abline(v = promedio_valor, col = "red", lty = 2)
x
View(x)
x <- DestinoDeEsportación23_24$Valor_factura_USD
View(x)
curve(dnorm(x, mean = promedio_valor, sd = desviacion_estandar),
from = max(0, promedio_valor - 3 * desviacion_estandar),
to = promedio_valor + 3 * desviacion_estandar,
xlab = "Valor de la factura (USD)",
ylab = "Densidad",
main = "Distribución Normal del Valor de la Factura",
col = "red")
x
# Agregar línea punteada en el promedio
abline(v = promedio_valor, col = "red", lty = 2)
# Agregar línea punteada en el promedio
abline(v = promedio_valor, col = "blue", lty = 2)
curve(dnorm(DesExRandom24$Valor_factura_USD, mean = promedioExrandom24, sd = DesviaciónExRandom24),
add = TRUE,
col = "blue")
curve(dnorm(DesExRandom24$Valor_factura_USD, mean = promedioExrandom24, sd = DesviaciónExRandom24),
add = TRUE,
col = "blue")
x <- DesExRandom24$Valor_factura_USD
curve(dnorm(x, mean = promedioExrandom24, sd = DesviaciónExRandom24),
add = TRUE,
col = "blue")
# Agregar línea punteada en el promedio de DesExRandom24
abline(v = promedioExrandom24, col = "red", lty = 2)
curve(dnorm(x, mean = promedioExrandom24, sd = 1),
add = TRUE,
col = "blue")
curve(dnorm(x, mean = promedio_valor, sd = 1),
from = max(0, promedio_valor - 3 * desviacion_estandar),
to = promedio_valor + 3 * desviacion_estandar,
xlab = "Valor de la factura (USD)",
ylab = "Densidad",
main = "Distribución Normal del Valor de la Factura",
col = "red")
# Superponer la segunda curva normal (DesExRandom24) en azul
curve(dnorm(x, mean = promedioExrandom24, sd = 1),
add = TRUE,
col = "blue")
curve(dnorm(x, mean = promedio_valor, sd = 1),
xlab = "Valor de la factura (USD)",
ylab = "Densidad",
main = "Distribución Normal del Valor de la Factura",
col = "red")
promedio_valor <- mean(DestinoDeEsportación23_24$Valor_factura_USD)
print(promedio_valor)  # Imprimir el resultado
# Definir los valores de las facturas (USD)
x <- seq(min(DestinoDeEsportación23_24$Valor_factura_USD),
max(DestinoDeEsportación23_24$Valor_factura_USD),
length.out = 100)
# Graficar la curva normal (DestinoDeEsportación23_24) en rojo con desviación estándar de 1
curve(dnorm(x, mean = promedio_valor, sd = 1),
xlab = "Valor de la factura (USD)",
ylab = "Densidad",
main = "Distribución Normal del Valor de la Factura",
col = "red")
# Agregar línea punteada en el promedio
abline(v = promedio_valor, col = "blue", lty = 2)
# Definir los valores de las facturas (USD)
x <- seq(min(DestinoDeEsportación23_24$Valor_factura_USD) - 5000,
max(DestinoDeEsportación23_24$Valor_factura_USD) + 5000,
length.out = 100)
# Graficar la curva normal (DestinoDeEsportación23_24) en rojo con desviación estándar de 1
curve(dnorm(x, mean = promedio_valor, sd = 1),
xlab = "Valor de la factura (USD)",
ylab = "Densidad",
main = "Distribución Normal del Valor de la Factura",
col = "red")
# Graficar la curva normal (DestinoDeEsportación23_24) en rojo con desviación estándar de 1
curve(dnorm(x, mean = promedio_valor, sd = 1),
xlab = "Valor de la factura (USD)",
ylab = "Densidad",
main = "Distribución Normal del Valor de la Factura",
col = "red")
# Calcular los límites para la curva normal
lim_inf <- max(0, promedio_valor - 3 * desviacion_estandar)
lim_sup <- promedio_valor + 3 * desviacion_estandar
# Graficar la curva normal (DestinoDeEsportación23_24) en rojo
curve(dnorm(x, mean = promedio_valor, sd = desviacion_estandar),
from = lim_inf,
to = lim_sup,
xlab = "Valor de la factura (USD)",
ylab = "Densidad",
main = "Distribución Normal del Valor de la Factura",
col = "red")
lim_inf <- max(0, promedio_valor - 3 * desviacion_estandar)
lim_sup <- promedio_valor + 3 * desviacion_estandar
# Graficar la curva normal (DestinoDeEsportación23_24) en rojo
curve(dnorm(x, mean = promedio_valor, sd = 1),
from = lim_inf,
to = lim_sup,
xlab = "Valor de la factura (USD)",
ylab = "Densidad",
main = "Distribución Normal del Valor de la Factura",
col = "red")
desviacion_estandar
# Dominio
x <- seq(min(DestinoDeEsportación23_24$Valor_factura_USD),
max(DestinoDeEsportación23_24$Valor_factura_USD),
length.out = 100)
lim_inf <- max(0, promedio_valor - 3 * desviacion_estandar)
lim_sup <- promedio_valor + 3 * desviacion_estandar
# Graficar la curva normal (DestinoDeEsportación23_24) en rojo
curve(dnorm(x, mean = promedio_valor, sd = 1),
from = lim_inf,
to = lim_sup,
xlab = "Valor de la factura (USD)",
ylab = "Densidad",
main = "Distribución Normal del Valor de la Factura",
col = "red")
# Graficar la curva normal (DestinoDeEsportación23_24) en rojo
curve(dnorm(x, mean = promedio_valor, sd = desviacion_estandar),
from = lim_inf,
to = lim_sup,
xlab = "Valor de la factura (USD)",
ylab = "Densidad",
main = "Distribución Normal del Valor de la Factura",
col = "red")
# Agregar línea punteada en el promedio
abline(v = promedio_valor, col = "blue", lty = 2)
x <- DesExRandom24$Valor_factura_USD
# Superponer la segunda curva normal (DesExRandom24) en azul
curve(dnorm(x, mean = promedioExrandom24, sd =DesviaciónExRandom24 ),
add = TRUE,
col = "blue")
# Agregar línea punteada en el promedio de DesExRandom24
abline(v = promedioExrandom24, col = "red", lty = 2)
# Agregar línea punteada en el promedio de DesExRandom24
abline(v = promedioExrandom24, col = "darkblue", lty = 2)
# Agregar línea punteada en el promedio
abline(v = promedio_valor, col = "darkred", lty = 2)
# Graficar la curva normal (DestinoDeEsportación23_24) en rojo
curve(dnorm(x, mean = promedio_valor, sd = desviacion_estandar),
from = lim_inf,
to = lim_sup,
xlab = "Valor de la factura (USD)",
ylab = "Densidad",
main = "Distribución Normal del Valor de la Factura",
col = "red")
# Agregar línea punteada en el promedio
abline(v = promedio_valor, col = "darkred", lty = 2)
# Superponer la segunda curva normal (DesExRandom24) en azul
curve(dnorm(x, mean = promedioExrandom24, sd =DesviaciónExRandom24 ),
add = TRUE,
col = "blue")
# Agregar línea punteada en el promedio de DesExRandom24
abline(v = promedioExrandom24, col = "darkblue", lty = 2
# Agregar línea punteada en el promedio de DesExRandom24
abline(v = promedioExrandom24, col = "darkblue", lty = 2)
# Agregar línea punteada en el promedio de DesExRandom24
abline(v = promedioExrandom24, col = "darkblue", lty = 2)
ylim <- c(0, 0.05)  # Ajustar según sea necesario
curve(dnorm(x, mean = promedio_valor, sd = desviacion_estandar),
from = lim_inf,
to = lim_sup,
xlab = "Valor de la factura (USD)",
ylab = "Densidad",
main = "Distribución Normal del Valor de la Factura",
col = "red",
ylim = ylim)
View(DesExRandom24)
max(DesExRandom24$Valor_factura_USD)
ylim <- c(0, 5084258)  # Ajustar según sea necesario
curve(dnorm(x, mean = promedio_valor, sd = desviacion_estandar),
from = lim_inf,
to = lim_sup,
xlab = "Valor de la factura (USD)",
ylab = "Densidad",
main = "Distribución Normal del Valor de la Factura",
col = "red",
ylim = ylim)
curve(dnorm(x, mean = promedio_valor, sd = desviacion_estandar),
from = lim_inf,
to = lim_sup,
xlab = "Valor de la factura (USD)",
ylab = "Densidad",
main = "Distribución Normal del Valor de la Factura",
col = "red")
# Superponer la segunda curva normal (DesExRandom24) en azul
curve(dnorm(x, mean = promedioExrandom24, sd =DesviaciónExRandom24),
add = TRUE,
col = "blue")
# Agregar línea punteada en el promedio de DesExRandom24
abline(v = promedioExrandom24, col = "darkblue", lty = 2)
# Agregar línea punteada en el promedio
abline(v = promedio_valor, col = "darkred", lty = 2)
curve(dnorm(x, mean = promedio_valor, sd = desviacion_estandar),
from = lim_inf,
to = lim_sup,
xlab = "Valor de la factura (USD)",
ylab = "Densidad",
main = "Distribución Normal del Valor de la Factura",
col = "red")
# Agregar línea punteada en el promedio
abline(v = promedio_valor, col = "darkred", lty = 2)
curve(dnorm(x, mean = promedioExrandom24, sd =desviacion_estandar),
add = TRUE,
col = "blue")
# Agregar línea punteada en el promedio de DesExRandom24
abline(v = promedioExrandom24, col = "darkblue", lty = 2)
desviacion_estandar
curve(dnorm(x, mean = promedioExrandom24, sd =138363),
add = TRUE,
col = "blue")
tamano_muestra <- round(0.1 * nrow(DestinoDeEsportación24))
tamano_muestra
print(promedio_valor)  # Imprimir el resultado
View(DestinoDeEsportación)
desviacion_estandar
# Calcular el p-valor
p_valor <- 2 * pnorm(abs((promedio_valor - promedioExrandom24) / desviacion_estandar))
print(p_valor)  # Imprimir el resultado
print(promedioExrandom24)  # Imprimir el resultado
